import org.apache.tools.ant.taskdefs.condition.Os

ext {
        versions = [:]
        libs = [:]

        platform = {
                arch = Os.OS_ARCH
                if (arch == "amd64") {
                        arch = "x86_64"
                }
                if(Os.isFamily(Os.FAMILY_MAC)) {
                        "macosx-${arch}"
                } else {
                        "linux-${arch}"
                }
        }
}

versions +=
        [ scala: "2.12"
        , scalaParser: "1.0.4"
        , scalaTest: "3.0.1"
        , scalaXml: "1.0.6"
        , spark: "1.6.2"
        , sprayJSON: "1.3.2"
        , asm: "4.0"
        , pegdown: "1.6.0"
        , deeplearning4j: "0.4-rc3.10"
        , jackson: "2.7.4"
        , nd4j: "0.4-rc3.10"
        , aws: "1.11.86"
        , azure: "4.3.0"
        , akka: "2.5.1"
        , akkaHttp: "10.0.6"
        , slf4j: "1.7.2"
        , logback: "1.0.9"
        , ant: "1.8.4"
        , jna: "4.3.0"
        , commons_io: "2.5"
        , jwt: "0.4.5"
        , metrohash: "1.0.0"
        , pojava: "3.0.0"
        , univocity: "2.4.1"
        ]

libs +=
        [ scala: "org.scala-lang:scala-library:${versions.scala}.2"
        , scalaCompiler: "org.scala-lang:scala-compiler:${versions.scala}.2"
        , scalaReflect: "org.scala-lang:scala-reflect:${versions.scala}.2"
        , scalaParser: "org.scala-lang.modules:scala-parser-combinators_${versions.scala}:${versions.scalaParser}"
        , scalaXML: "org.scala-lang.modules:scala-xml_${versions.scala}:${versions.scalaXml}"
        , scalaTest: "org.scalatest:scalatest_${versions.scala}:${versions.scalaTest}"
        , spark: "org.apache.spark:spark-core_${versions.scala}:${versions.spark}"
        , sparkSQL: "org.apache.spark:spark-sql_${versions.scala}:${versions.spark}"
        , sparkML: "org.apache.spark:spark-mllib_${versions.scala}:${versions.spark}"
        , sprayJSON: "io.spray:spray-json_${versions.scala}:${versions.sprayJSON}"
        , asm: "org.ow2.asm:asm-all:${versions.asm}"
        , pegdown: "org.pegdown:pegdown:${versions.pegdown}"
        , deeplearning4j: "org.deeplearning4j:deeplearning4j-core:${versions.deeplearning4j}"
        , jacksonScala: "com.fasterxml.jackson.module:jackson-module-scala_${versions.scala}:${versions.jackson}"
        , jackson: "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"
        , nd4j: "org.nd4j:nd4j-native:${versions.nd4j}"
        , nd4jNative: "org.nd4j:nd4j-native:${versions.nd4j}:${platform()}"
        , s3aws: "com.amazonaws:aws-java-sdk-s3:${versions.aws}"
        , stsaws: "com.amazonaws:aws-java-sdk-sts:${versions.aws}"
        , azure: "com.microsoft.azure:azure-storage:${versions.azure}"
        , akka_actor: "com.typesafe.akka:akka-actor_${versions.scala}:${versions.akka}"
        , akka_cluster: "com.typesafe.akka:akka-cluster_${versions.scala}:${versions.akka}"
        , akka_http: "com.typesafe.akka:akka-http_${versions.scala}:${versions.akkaHttp}"
        , akka_slf4j: "com.typesafe.akka:akka-slf4j_${versions.scala}:${versions.akka}"
        , akka_stream: "com.typesafe.akka:akka-stream_${versions.scala}:${versions.akka}"
        , slf4j: "org.slf4j:slf4j-api:${versions.slf4j}"
        , logback_classic: "ch.qos.logback:logback-classic:${versions.logback}"
        , logback_core: "ch.qos.logback:logback-core:${versions.logback}"
        , ant: "org.apache.ant:ant:${versions.ant}"
        , jna: "net.java.dev.jna:jna:${versions.jna}"
        , commons_io: "commons-io:commons-io:${versions.commons_io}"
        , jwt: "com.jason-goodwin:authentikat-jwt_${versions.scala}:${versions.jwt}"
        , metrohash: "com.adgear:metrohash:${versions.metrohash}"
        , pojava: "org.pojava:datetime:${versions.pojava}"
        , univocity: "com.univocity:univocity-parsers:${versions.univocity}"
        ]
