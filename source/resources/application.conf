akka {
  remote {
    log-remote-lifecycle-events = off
    maximum-payload-bytes = 30000000 bytes

    artery {
      enabled = off
    }
  }

  http {
    client {
      idle-timeout = 30s

      # increase to reduce NoMoreElementsNeeded
      # increasing runs the risk of resource leaks (as the streams will take longer to cancel)
      stream-cancellation-delay = 5000ms
    }
    server {
      parsing.max-content-length = 25m
      parsing.illegal-header-warnings = off
      request-timeout = 60s
      idle-timeout = 60s
      # remote-address-header = on
      parsing.max-uri-length = 3072
      transparent-head-requests = off
    }
    host-connection-pool {
      max-connections = 512
      max-open-requests = 2048
      pipelining-limit = 4
    }
  }

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 30s

  default-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"

    fork-join-executor {
      parallelism-min = 8
      parallelism-max = 64
      parallelism-factor = 3.0
    }
  }

  coordinated-shutdown {
    phases {
      before-service-unbind {
        timeout = 60s
        recover = off
      }
      before-cluster-shutdown {
        timeout = 10s
        recover = off
      }
      actor-system-terminate {
        timeout = 1s
      }
    }
  }
}
